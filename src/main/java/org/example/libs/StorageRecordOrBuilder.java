// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: storage_record.proto
// Protobuf Java Version: 4.30.2

package org.example.libs;

public interface StorageRecordOrBuilder extends
    // @@protoc_insertion_point(interface_extends:StorageRecord)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Номер записи
   * </pre>
   *
   * <code>uint32 record_number = 1;</code>
   * @return The recordNumber.
   */
  int getRecordNumber();

  /**
   * <pre>
   * Время отметки
   * </pre>
   *
   * <code>fixed32 time_stamp = 2;</code>
   * @return The timeStamp.
   */
  int getTimeStamp();

  /**
   * <pre>
   * Причины формирования отметки
   * </pre>
   *
   * <code>repeated .StorageRecord.Reason record_reason = 3;</code>
   * @return A list containing the recordReason.
   */
  java.util.List<org.example.libs.StorageRecord.Reason> getRecordReasonList();
  /**
   * <pre>
   * Причины формирования отметки
   * </pre>
   *
   * <code>repeated .StorageRecord.Reason record_reason = 3;</code>
   * @return The count of recordReason.
   */
  int getRecordReasonCount();
  /**
   * <pre>
   * Причины формирования отметки
   * </pre>
   *
   * <code>repeated .StorageRecord.Reason record_reason = 3;</code>
   * @param index The index of the element to return.
   * @return The recordReason at the given index.
   */
  org.example.libs.StorageRecord.Reason getRecordReason(int index);
  /**
   * <pre>
   * Причины формирования отметки
   * </pre>
   *
   * <code>repeated .StorageRecord.Reason record_reason = 3;</code>
   * @return A list containing the enum numeric values on the wire for recordReason.
   */
  java.util.List<java.lang.Integer>
  getRecordReasonValueList();
  /**
   * <pre>
   * Причины формирования отметки
   * </pre>
   *
   * <code>repeated .StorageRecord.Reason record_reason = 3;</code>
   * @param index The index of the value to return.
   * @return The enum numeric value on the wire of recordReason at the given index.
   */
  int getRecordReasonValue(int index);

  /**
   * <pre>
   * Статусные флаги
   * </pre>
   *
   * <code>fixed32 status_flags = 4;</code>
   * @return The statusFlags.
   */
  int getStatusFlags();

  /**
   * <pre>
   * Датчик ускорения
   * </pre>
   *
   * <code>repeated .SensAccelerometerData sens_accelerometer_data = 18;</code>
   */
  java.util.List<org.example.libs.SensAccelerometerData> 
      getSensAccelerometerDataList();
  /**
   * <pre>
   * Датчик ускорения
   * </pre>
   *
   * <code>repeated .SensAccelerometerData sens_accelerometer_data = 18;</code>
   */
  org.example.libs.SensAccelerometerData getSensAccelerometerData(int index);
  /**
   * <pre>
   * Датчик ускорения
   * </pre>
   *
   * <code>repeated .SensAccelerometerData sens_accelerometer_data = 18;</code>
   */
  int getSensAccelerometerDataCount();
  /**
   * <pre>
   * Датчик ускорения
   * </pre>
   *
   * <code>repeated .SensAccelerometerData sens_accelerometer_data = 18;</code>
   */
  java.util.List<? extends org.example.libs.SensAccelerometerDataOrBuilder> 
      getSensAccelerometerDataOrBuilderList();
  /**
   * <pre>
   * Датчик ускорения
   * </pre>
   *
   * <code>repeated .SensAccelerometerData sens_accelerometer_data = 18;</code>
   */
  org.example.libs.SensAccelerometerDataOrBuilder getSensAccelerometerDataOrBuilder(
      int index);

  /**
   * <pre>
   * Аналоговый вход
   * </pre>
   *
   * <code>repeated .SensAinAinValue sens_ain_ain_value = 9;</code>
   */
  java.util.List<org.example.libs.SensAinAinValue> 
      getSensAinAinValueList();
  /**
   * <pre>
   * Аналоговый вход
   * </pre>
   *
   * <code>repeated .SensAinAinValue sens_ain_ain_value = 9;</code>
   */
  org.example.libs.SensAinAinValue getSensAinAinValue(int index);
  /**
   * <pre>
   * Аналоговый вход
   * </pre>
   *
   * <code>repeated .SensAinAinValue sens_ain_ain_value = 9;</code>
   */
  int getSensAinAinValueCount();
  /**
   * <pre>
   * Аналоговый вход
   * </pre>
   *
   * <code>repeated .SensAinAinValue sens_ain_ain_value = 9;</code>
   */
  java.util.List<? extends org.example.libs.SensAinAinValueOrBuilder> 
      getSensAinAinValueOrBuilderList();
  /**
   * <pre>
   * Аналоговый вход
   * </pre>
   *
   * <code>repeated .SensAinAinValue sens_ain_ain_value = 9;</code>
   */
  org.example.libs.SensAinAinValueOrBuilder getSensAinAinValueOrBuilder(
      int index);

  /**
   * <pre>
   * Буферизованные данные
   * </pre>
   *
   * <code>repeated .SensBufferData sens_buffer_data = 20;</code>
   */
  java.util.List<org.example.libs.SensBufferData> 
      getSensBufferDataList();
  /**
   * <pre>
   * Буферизованные данные
   * </pre>
   *
   * <code>repeated .SensBufferData sens_buffer_data = 20;</code>
   */
  org.example.libs.SensBufferData getSensBufferData(int index);
  /**
   * <pre>
   * Буферизованные данные
   * </pre>
   *
   * <code>repeated .SensBufferData sens_buffer_data = 20;</code>
   */
  int getSensBufferDataCount();
  /**
   * <pre>
   * Буферизованные данные
   * </pre>
   *
   * <code>repeated .SensBufferData sens_buffer_data = 20;</code>
   */
  java.util.List<? extends org.example.libs.SensBufferDataOrBuilder> 
      getSensBufferDataOrBuilderList();
  /**
   * <pre>
   * Буферизованные данные
   * </pre>
   *
   * <code>repeated .SensBufferData sens_buffer_data = 20;</code>
   */
  org.example.libs.SensBufferDataOrBuilder getSensBufferDataOrBuilder(
      int index);

  /**
   * <pre>
   * Кнопка
   * </pre>
   *
   * <code>repeated .SensButtonPressCounter sens_button_press_counter = 14;</code>
   */
  java.util.List<org.example.libs.SensButtonPressCounter> 
      getSensButtonPressCounterList();
  /**
   * <pre>
   * Кнопка
   * </pre>
   *
   * <code>repeated .SensButtonPressCounter sens_button_press_counter = 14;</code>
   */
  org.example.libs.SensButtonPressCounter getSensButtonPressCounter(int index);
  /**
   * <pre>
   * Кнопка
   * </pre>
   *
   * <code>repeated .SensButtonPressCounter sens_button_press_counter = 14;</code>
   */
  int getSensButtonPressCounterCount();
  /**
   * <pre>
   * Кнопка
   * </pre>
   *
   * <code>repeated .SensButtonPressCounter sens_button_press_counter = 14;</code>
   */
  java.util.List<? extends org.example.libs.SensButtonPressCounterOrBuilder> 
      getSensButtonPressCounterOrBuilderList();
  /**
   * <pre>
   * Кнопка
   * </pre>
   *
   * <code>repeated .SensButtonPressCounter sens_button_press_counter = 14;</code>
   */
  org.example.libs.SensButtonPressCounterOrBuilder getSensButtonPressCounterOrBuilder(
      int index);

  /**
   * <pre>
   * CAN-лог
   * </pre>
   *
   * <code>repeated .SensCanLogData sens_can_log_data = 16;</code>
   */
  java.util.List<org.example.libs.SensCanLogData> 
      getSensCanLogDataList();
  /**
   * <pre>
   * CAN-лог
   * </pre>
   *
   * <code>repeated .SensCanLogData sens_can_log_data = 16;</code>
   */
  org.example.libs.SensCanLogData getSensCanLogData(int index);
  /**
   * <pre>
   * CAN-лог
   * </pre>
   *
   * <code>repeated .SensCanLogData sens_can_log_data = 16;</code>
   */
  int getSensCanLogDataCount();
  /**
   * <pre>
   * CAN-лог
   * </pre>
   *
   * <code>repeated .SensCanLogData sens_can_log_data = 16;</code>
   */
  java.util.List<? extends org.example.libs.SensCanLogDataOrBuilder> 
      getSensCanLogDataOrBuilderList();
  /**
   * <pre>
   * CAN-лог
   * </pre>
   *
   * <code>repeated .SensCanLogData sens_can_log_data = 16;</code>
   */
  org.example.libs.SensCanLogDataOrBuilder getSensCanLogDataOrBuilder(
      int index);

  /**
   * <pre>
   * Расширение CAN-лога
   * </pre>
   *
   * <code>repeated .SensCanLogTmpDataExt sens_can_log_tmp_data_ext = 17;</code>
   */
  java.util.List<org.example.libs.SensCanLogTmpDataExt> 
      getSensCanLogTmpDataExtList();
  /**
   * <pre>
   * Расширение CAN-лога
   * </pre>
   *
   * <code>repeated .SensCanLogTmpDataExt sens_can_log_tmp_data_ext = 17;</code>
   */
  org.example.libs.SensCanLogTmpDataExt getSensCanLogTmpDataExt(int index);
  /**
   * <pre>
   * Расширение CAN-лога
   * </pre>
   *
   * <code>repeated .SensCanLogTmpDataExt sens_can_log_tmp_data_ext = 17;</code>
   */
  int getSensCanLogTmpDataExtCount();
  /**
   * <pre>
   * Расширение CAN-лога
   * </pre>
   *
   * <code>repeated .SensCanLogTmpDataExt sens_can_log_tmp_data_ext = 17;</code>
   */
  java.util.List<? extends org.example.libs.SensCanLogTmpDataExtOrBuilder> 
      getSensCanLogTmpDataExtOrBuilderList();
  /**
   * <pre>
   * Расширение CAN-лога
   * </pre>
   *
   * <code>repeated .SensCanLogTmpDataExt sens_can_log_tmp_data_ext = 17;</code>
   */
  org.example.libs.SensCanLogTmpDataExtOrBuilder getSensCanLogTmpDataExtOrBuilder(
      int index);

  /**
   * <pre>
   * Счётчик
   * </pre>
   *
   * <code>repeated .SensCounterCount sens_counter_count = 11;</code>
   */
  java.util.List<org.example.libs.SensCounterCount> 
      getSensCounterCountList();
  /**
   * <pre>
   * Счётчик
   * </pre>
   *
   * <code>repeated .SensCounterCount sens_counter_count = 11;</code>
   */
  org.example.libs.SensCounterCount getSensCounterCount(int index);
  /**
   * <pre>
   * Счётчик
   * </pre>
   *
   * <code>repeated .SensCounterCount sens_counter_count = 11;</code>
   */
  int getSensCounterCountCount();
  /**
   * <pre>
   * Счётчик
   * </pre>
   *
   * <code>repeated .SensCounterCount sens_counter_count = 11;</code>
   */
  java.util.List<? extends org.example.libs.SensCounterCountOrBuilder> 
      getSensCounterCountOrBuilderList();
  /**
   * <pre>
   * Счётчик
   * </pre>
   *
   * <code>repeated .SensCounterCount sens_counter_count = 11;</code>
   */
  org.example.libs.SensCounterCountOrBuilder getSensCounterCountOrBuilder(
      int index);

  /**
   * <pre>
   * Данные об аварии
   * </pre>
   *
   * <code>repeated .SensCrashData sens_crash_data = 24;</code>
   */
  java.util.List<org.example.libs.SensCrashData> 
      getSensCrashDataList();
  /**
   * <pre>
   * Данные об аварии
   * </pre>
   *
   * <code>repeated .SensCrashData sens_crash_data = 24;</code>
   */
  org.example.libs.SensCrashData getSensCrashData(int index);
  /**
   * <pre>
   * Данные об аварии
   * </pre>
   *
   * <code>repeated .SensCrashData sens_crash_data = 24;</code>
   */
  int getSensCrashDataCount();
  /**
   * <pre>
   * Данные об аварии
   * </pre>
   *
   * <code>repeated .SensCrashData sens_crash_data = 24;</code>
   */
  java.util.List<? extends org.example.libs.SensCrashDataOrBuilder> 
      getSensCrashDataOrBuilderList();
  /**
   * <pre>
   * Данные об аварии
   * </pre>
   *
   * <code>repeated .SensCrashData sens_crash_data = 24;</code>
   */
  org.example.libs.SensCrashDataOrBuilder getSensCrashDataOrBuilder(
      int index);

  /**
   * <pre>
   * Цифровые входы
   * </pre>
   *
   * <code>repeated .SensDinsFlags sens_dins_flags = 10;</code>
   */
  java.util.List<org.example.libs.SensDinsFlags> 
      getSensDinsFlagsList();
  /**
   * <pre>
   * Цифровые входы
   * </pre>
   *
   * <code>repeated .SensDinsFlags sens_dins_flags = 10;</code>
   */
  org.example.libs.SensDinsFlags getSensDinsFlags(int index);
  /**
   * <pre>
   * Цифровые входы
   * </pre>
   *
   * <code>repeated .SensDinsFlags sens_dins_flags = 10;</code>
   */
  int getSensDinsFlagsCount();
  /**
   * <pre>
   * Цифровые входы
   * </pre>
   *
   * <code>repeated .SensDinsFlags sens_dins_flags = 10;</code>
   */
  java.util.List<? extends org.example.libs.SensDinsFlagsOrBuilder> 
      getSensDinsFlagsOrBuilderList();
  /**
   * <pre>
   * Цифровые входы
   * </pre>
   *
   * <code>repeated .SensDinsFlags sens_dins_flags = 10;</code>
   */
  org.example.libs.SensDinsFlagsOrBuilder getSensDinsFlagsOrBuilder(
      int index);

  /**
   * <pre>
   * Цифровые выходы
   * </pre>
   *
   * <code>repeated .SensDoutsFlags sens_douts_flags = 19;</code>
   */
  java.util.List<org.example.libs.SensDoutsFlags> 
      getSensDoutsFlagsList();
  /**
   * <pre>
   * Цифровые выходы
   * </pre>
   *
   * <code>repeated .SensDoutsFlags sens_douts_flags = 19;</code>
   */
  org.example.libs.SensDoutsFlags getSensDoutsFlags(int index);
  /**
   * <pre>
   * Цифровые выходы
   * </pre>
   *
   * <code>repeated .SensDoutsFlags sens_douts_flags = 19;</code>
   */
  int getSensDoutsFlagsCount();
  /**
   * <pre>
   * Цифровые выходы
   * </pre>
   *
   * <code>repeated .SensDoutsFlags sens_douts_flags = 19;</code>
   */
  java.util.List<? extends org.example.libs.SensDoutsFlagsOrBuilder> 
      getSensDoutsFlagsOrBuilderList();
  /**
   * <pre>
   * Цифровые выходы
   * </pre>
   *
   * <code>repeated .SensDoutsFlags sens_douts_flags = 19;</code>
   */
  org.example.libs.SensDoutsFlagsOrBuilder getSensDoutsFlagsOrBuilder(
      int index);

  /**
   * <pre>
   * Частотомер
   * </pre>
   *
   * <code>repeated .SensFmeterFrequency sens_fmeter_frequency = 12;</code>
   */
  java.util.List<org.example.libs.SensFmeterFrequency> 
      getSensFmeterFrequencyList();
  /**
   * <pre>
   * Частотомер
   * </pre>
   *
   * <code>repeated .SensFmeterFrequency sens_fmeter_frequency = 12;</code>
   */
  org.example.libs.SensFmeterFrequency getSensFmeterFrequency(int index);
  /**
   * <pre>
   * Частотомер
   * </pre>
   *
   * <code>repeated .SensFmeterFrequency sens_fmeter_frequency = 12;</code>
   */
  int getSensFmeterFrequencyCount();
  /**
   * <pre>
   * Частотомер
   * </pre>
   *
   * <code>repeated .SensFmeterFrequency sens_fmeter_frequency = 12;</code>
   */
  java.util.List<? extends org.example.libs.SensFmeterFrequencyOrBuilder> 
      getSensFmeterFrequencyOrBuilderList();
  /**
   * <pre>
   * Частотомер
   * </pre>
   *
   * <code>repeated .SensFmeterFrequency sens_fmeter_frequency = 12;</code>
   */
  org.example.libs.SensFmeterFrequencyOrBuilder getSensFmeterFrequencyOrBuilder(
      int index);

  /**
   * <pre>
   * Уровень топлива
   * </pre>
   *
   * <code>repeated .SensFuelLevel sens_fuel_level = 8;</code>
   */
  java.util.List<org.example.libs.SensFuelLevel> 
      getSensFuelLevelList();
  /**
   * <pre>
   * Уровень топлива
   * </pre>
   *
   * <code>repeated .SensFuelLevel sens_fuel_level = 8;</code>
   */
  org.example.libs.SensFuelLevel getSensFuelLevel(int index);
  /**
   * <pre>
   * Уровень топлива
   * </pre>
   *
   * <code>repeated .SensFuelLevel sens_fuel_level = 8;</code>
   */
  int getSensFuelLevelCount();
  /**
   * <pre>
   * Уровень топлива
   * </pre>
   *
   * <code>repeated .SensFuelLevel sens_fuel_level = 8;</code>
   */
  java.util.List<? extends org.example.libs.SensFuelLevelOrBuilder> 
      getSensFuelLevelOrBuilderList();
  /**
   * <pre>
   * Уровень топлива
   * </pre>
   *
   * <code>repeated .SensFuelLevel sens_fuel_level = 8;</code>
   */
  org.example.libs.SensFuelLevelOrBuilder getSensFuelLevelOrBuilder(
      int index);

  /**
   * <pre>
   * Информация о базовых станциях GSM
   * </pre>
   *
   * <code>repeated .SensGsmCellMonitoring sens_gsm_cell_monitoring = 13;</code>
   */
  java.util.List<org.example.libs.SensGsmCellMonitoring> 
      getSensGsmCellMonitoringList();
  /**
   * <pre>
   * Информация о базовых станциях GSM
   * </pre>
   *
   * <code>repeated .SensGsmCellMonitoring sens_gsm_cell_monitoring = 13;</code>
   */
  org.example.libs.SensGsmCellMonitoring getSensGsmCellMonitoring(int index);
  /**
   * <pre>
   * Информация о базовых станциях GSM
   * </pre>
   *
   * <code>repeated .SensGsmCellMonitoring sens_gsm_cell_monitoring = 13;</code>
   */
  int getSensGsmCellMonitoringCount();
  /**
   * <pre>
   * Информация о базовых станциях GSM
   * </pre>
   *
   * <code>repeated .SensGsmCellMonitoring sens_gsm_cell_monitoring = 13;</code>
   */
  java.util.List<? extends org.example.libs.SensGsmCellMonitoringOrBuilder> 
      getSensGsmCellMonitoringOrBuilderList();
  /**
   * <pre>
   * Информация о базовых станциях GSM
   * </pre>
   *
   * <code>repeated .SensGsmCellMonitoring sens_gsm_cell_monitoring = 13;</code>
   */
  org.example.libs.SensGsmCellMonitoringOrBuilder getSensGsmCellMonitoringOrBuilder(
      int index);

  /**
   * <pre>
   * Навигационные данные
   * </pre>
   *
   * <code>repeated .SensNdNavData sens_nd_nav_data = 7;</code>
   */
  java.util.List<org.example.libs.SensNdNavData> 
      getSensNdNavDataList();
  /**
   * <pre>
   * Навигационные данные
   * </pre>
   *
   * <code>repeated .SensNdNavData sens_nd_nav_data = 7;</code>
   */
  org.example.libs.SensNdNavData getSensNdNavData(int index);
  /**
   * <pre>
   * Навигационные данные
   * </pre>
   *
   * <code>repeated .SensNdNavData sens_nd_nav_data = 7;</code>
   */
  int getSensNdNavDataCount();
  /**
   * <pre>
   * Навигационные данные
   * </pre>
   *
   * <code>repeated .SensNdNavData sens_nd_nav_data = 7;</code>
   */
  java.util.List<? extends org.example.libs.SensNdNavDataOrBuilder> 
      getSensNdNavDataOrBuilderList();
  /**
   * <pre>
   * Навигационные данные
   * </pre>
   *
   * <code>repeated .SensNdNavData sens_nd_nav_data = 7;</code>
   */
  org.example.libs.SensNdNavDataOrBuilder getSensNdNavDataOrBuilder(
      int index);

  /**
   * <pre>
   * Статистика хранилище навигационных данных
   * </pre>
   *
   * <code>repeated .SensStorInfo sens_stor_info = 21;</code>
   */
  java.util.List<org.example.libs.SensStorInfo> 
      getSensStorInfoList();
  /**
   * <pre>
   * Статистика хранилище навигационных данных
   * </pre>
   *
   * <code>repeated .SensStorInfo sens_stor_info = 21;</code>
   */
  org.example.libs.SensStorInfo getSensStorInfo(int index);
  /**
   * <pre>
   * Статистика хранилище навигационных данных
   * </pre>
   *
   * <code>repeated .SensStorInfo sens_stor_info = 21;</code>
   */
  int getSensStorInfoCount();
  /**
   * <pre>
   * Статистика хранилище навигационных данных
   * </pre>
   *
   * <code>repeated .SensStorInfo sens_stor_info = 21;</code>
   */
  java.util.List<? extends org.example.libs.SensStorInfoOrBuilder> 
      getSensStorInfoOrBuilderList();
  /**
   * <pre>
   * Статистика хранилище навигационных данных
   * </pre>
   *
   * <code>repeated .SensStorInfo sens_stor_info = 21;</code>
   */
  org.example.libs.SensStorInfoOrBuilder getSensStorInfoOrBuilder(
      int index);

  /**
   * <pre>
   * Датчик температуры
   * </pre>
   *
   * <code>repeated .SensTermoData sens_termo_data = 15;</code>
   */
  java.util.List<org.example.libs.SensTermoData> 
      getSensTermoDataList();
  /**
   * <pre>
   * Датчик температуры
   * </pre>
   *
   * <code>repeated .SensTermoData sens_termo_data = 15;</code>
   */
  org.example.libs.SensTermoData getSensTermoData(int index);
  /**
   * <pre>
   * Датчик температуры
   * </pre>
   *
   * <code>repeated .SensTermoData sens_termo_data = 15;</code>
   */
  int getSensTermoDataCount();
  /**
   * <pre>
   * Датчик температуры
   * </pre>
   *
   * <code>repeated .SensTermoData sens_termo_data = 15;</code>
   */
  java.util.List<? extends org.example.libs.SensTermoDataOrBuilder> 
      getSensTermoDataOrBuilderList();
  /**
   * <pre>
   * Датчик температуры
   * </pre>
   *
   * <code>repeated .SensTermoData sens_termo_data = 15;</code>
   */
  org.example.libs.SensTermoDataOrBuilder getSensTermoDataOrBuilder(
      int index);

  /**
   * <pre>
   * Тесты ЭРА ГЛОНАСС
   * </pre>
   *
   * <code>repeated .SensTestEraTests sens_test_era_tests = 23;</code>
   */
  java.util.List<org.example.libs.SensTestEraTests> 
      getSensTestEraTestsList();
  /**
   * <pre>
   * Тесты ЭРА ГЛОНАСС
   * </pre>
   *
   * <code>repeated .SensTestEraTests sens_test_era_tests = 23;</code>
   */
  org.example.libs.SensTestEraTests getSensTestEraTests(int index);
  /**
   * <pre>
   * Тесты ЭРА ГЛОНАСС
   * </pre>
   *
   * <code>repeated .SensTestEraTests sens_test_era_tests = 23;</code>
   */
  int getSensTestEraTestsCount();
  /**
   * <pre>
   * Тесты ЭРА ГЛОНАСС
   * </pre>
   *
   * <code>repeated .SensTestEraTests sens_test_era_tests = 23;</code>
   */
  java.util.List<? extends org.example.libs.SensTestEraTestsOrBuilder> 
      getSensTestEraTestsOrBuilderList();
  /**
   * <pre>
   * Тесты ЭРА ГЛОНАСС
   * </pre>
   *
   * <code>repeated .SensTestEraTests sens_test_era_tests = 23;</code>
   */
  org.example.libs.SensTestEraTestsOrBuilder getSensTestEraTestsOrBuilder(
      int index);

  /**
   * <pre>
   * Статистика трекера
   * </pre>
   *
   * <code>repeated .SensTrackerInfo sens_tracker_info = 22;</code>
   */
  java.util.List<org.example.libs.SensTrackerInfo> 
      getSensTrackerInfoList();
  /**
   * <pre>
   * Статистика трекера
   * </pre>
   *
   * <code>repeated .SensTrackerInfo sens_tracker_info = 22;</code>
   */
  org.example.libs.SensTrackerInfo getSensTrackerInfo(int index);
  /**
   * <pre>
   * Статистика трекера
   * </pre>
   *
   * <code>repeated .SensTrackerInfo sens_tracker_info = 22;</code>
   */
  int getSensTrackerInfoCount();
  /**
   * <pre>
   * Статистика трекера
   * </pre>
   *
   * <code>repeated .SensTrackerInfo sens_tracker_info = 22;</code>
   */
  java.util.List<? extends org.example.libs.SensTrackerInfoOrBuilder> 
      getSensTrackerInfoOrBuilderList();
  /**
   * <pre>
   * Статистика трекера
   * </pre>
   *
   * <code>repeated .SensTrackerInfo sens_tracker_info = 22;</code>
   */
  org.example.libs.SensTrackerInfoOrBuilder getSensTrackerInfoOrBuilder(
      int index);
}
