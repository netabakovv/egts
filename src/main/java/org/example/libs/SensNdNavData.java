// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: storage_record.proto
// Protobuf Java Version: 4.30.2

package org.example.libs;

/**
 * <pre>
 * Навигационные данные
 * </pre>
 *
 * Protobuf type {@code SensNdNavData}
 */
public final class SensNdNavData extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:SensNdNavData)
    SensNdNavDataOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 30,
      /* patch= */ 2,
      /* suffix= */ "",
      SensNdNavData.class.getName());
  }
  // Use SensNdNavData.newBuilder() to construct.
  private SensNdNavData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private SensNdNavData() {
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.example.libs.StorageRecordOuterClass.internal_static_SensNdNavData_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.example.libs.StorageRecordOuterClass.internal_static_SensNdNavData_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.example.libs.SensNdNavData.class, org.example.libs.SensNdNavData.Builder.class);
  }

  public static final int SENS_NUM_FIELD_NUMBER = 1;
  private int sensNum_ = 0;
  /**
   * <pre>
   * Номер датчика
   * </pre>
   *
   * <code>uint32 sens_num = 1;</code>
   * @return The sensNum.
   */
  @java.lang.Override
  public int getSensNum() {
    return sensNum_;
  }

  public static final int LONGITUDE_FIELD_NUMBER = 2;
  private int longitude_ = 0;
  /**
   * <pre>
   * Долгота (в формате МНД ЭРА ГЛОНАСС)
   * </pre>
   *
   * <code>sfixed32 longitude = 2;</code>
   * @return The longitude.
   */
  @java.lang.Override
  public int getLongitude() {
    return longitude_;
  }

  public static final int LATITUDE_FIELD_NUMBER = 3;
  private int latitude_ = 0;
  /**
   * <pre>
   * Широта (в формате МНД ЭРА ГЛОНАСС)
   * </pre>
   *
   * <code>sfixed32 latitude = 3;</code>
   * @return The latitude.
   */
  @java.lang.Override
  public int getLatitude() {
    return latitude_;
  }

  public static final int ALTITUDE_FIELD_NUMBER = 4;
  private int altitude_ = 0;
  /**
   * <pre>
   * Высота, м
   * </pre>
   *
   * <code>uint32 altitude = 4;</code>
   * @return The altitude.
   */
  @java.lang.Override
  public int getAltitude() {
    return altitude_;
  }

  public static final int SPEED_FIELD_NUMBER = 5;
  private int speed_ = 0;
  /**
   * <pre>
   * Скорость, км/ч
   * </pre>
   *
   * <code>uint32 speed = 5;</code>
   * @return The speed.
   */
  @java.lang.Override
  public int getSpeed() {
    return speed_;
  }

  public static final int COURSE_FIELD_NUMBER = 6;
  private int course_ = 0;
  /**
   * <pre>
   * Курс (угол)
   * </pre>
   *
   * <code>uint32 course = 6;</code>
   * @return The course.
   */
  @java.lang.Override
  public int getCourse() {
    return course_;
  }

  public static final int SAT_COUNT_FIELD_NUMBER = 7;
  private int satCount_ = 0;
  /**
   * <pre>
   * Количество спутников
   * </pre>
   *
   * <code>uint32 sat_count = 7;</code>
   * @return The satCount.
   */
  @java.lang.Override
  public int getSatCount() {
    return satCount_;
  }

  public static final int PDOP_FIELD_NUMBER = 8;
  private int pdop_ = 0;
  /**
   * <pre>
   * Погрешность позиционирования
   * </pre>
   *
   * <code>uint32 pdop = 8;</code>
   * @return The pdop.
   */
  @java.lang.Override
  public int getPdop() {
    return pdop_;
  }

  public static final int TRACK_FIELD_NUMBER = 9;
  private int track_ = 0;
  /**
   * <pre>
   * Трэк, м
   * </pre>
   *
   * <code>uint32 track = 9;</code>
   * @return The track.
   */
  @java.lang.Override
  public int getTrack() {
    return track_;
  }

  public static final int ODOMETER_FIELD_NUMBER = 10;
  private int odometer_ = 0;
  /**
   * <pre>
   * Одометр, м
   * </pre>
   *
   * <code>uint32 odometer = 10;</code>
   * @return The odometer.
   */
  @java.lang.Override
  public int getOdometer() {
    return odometer_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (sensNum_ != 0) {
      output.writeUInt32(1, sensNum_);
    }
    if (longitude_ != 0) {
      output.writeSFixed32(2, longitude_);
    }
    if (latitude_ != 0) {
      output.writeSFixed32(3, latitude_);
    }
    if (altitude_ != 0) {
      output.writeUInt32(4, altitude_);
    }
    if (speed_ != 0) {
      output.writeUInt32(5, speed_);
    }
    if (course_ != 0) {
      output.writeUInt32(6, course_);
    }
    if (satCount_ != 0) {
      output.writeUInt32(7, satCount_);
    }
    if (pdop_ != 0) {
      output.writeUInt32(8, pdop_);
    }
    if (track_ != 0) {
      output.writeUInt32(9, track_);
    }
    if (odometer_ != 0) {
      output.writeUInt32(10, odometer_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (sensNum_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(1, sensNum_);
    }
    if (longitude_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeSFixed32Size(2, longitude_);
    }
    if (latitude_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeSFixed32Size(3, latitude_);
    }
    if (altitude_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(4, altitude_);
    }
    if (speed_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(5, speed_);
    }
    if (course_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(6, course_);
    }
    if (satCount_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(7, satCount_);
    }
    if (pdop_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(8, pdop_);
    }
    if (track_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(9, track_);
    }
    if (odometer_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(10, odometer_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.example.libs.SensNdNavData)) {
      return super.equals(obj);
    }
    org.example.libs.SensNdNavData other = (org.example.libs.SensNdNavData) obj;

    if (getSensNum()
        != other.getSensNum()) return false;
    if (getLongitude()
        != other.getLongitude()) return false;
    if (getLatitude()
        != other.getLatitude()) return false;
    if (getAltitude()
        != other.getAltitude()) return false;
    if (getSpeed()
        != other.getSpeed()) return false;
    if (getCourse()
        != other.getCourse()) return false;
    if (getSatCount()
        != other.getSatCount()) return false;
    if (getPdop()
        != other.getPdop()) return false;
    if (getTrack()
        != other.getTrack()) return false;
    if (getOdometer()
        != other.getOdometer()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + SENS_NUM_FIELD_NUMBER;
    hash = (53 * hash) + getSensNum();
    hash = (37 * hash) + LONGITUDE_FIELD_NUMBER;
    hash = (53 * hash) + getLongitude();
    hash = (37 * hash) + LATITUDE_FIELD_NUMBER;
    hash = (53 * hash) + getLatitude();
    hash = (37 * hash) + ALTITUDE_FIELD_NUMBER;
    hash = (53 * hash) + getAltitude();
    hash = (37 * hash) + SPEED_FIELD_NUMBER;
    hash = (53 * hash) + getSpeed();
    hash = (37 * hash) + COURSE_FIELD_NUMBER;
    hash = (53 * hash) + getCourse();
    hash = (37 * hash) + SAT_COUNT_FIELD_NUMBER;
    hash = (53 * hash) + getSatCount();
    hash = (37 * hash) + PDOP_FIELD_NUMBER;
    hash = (53 * hash) + getPdop();
    hash = (37 * hash) + TRACK_FIELD_NUMBER;
    hash = (53 * hash) + getTrack();
    hash = (37 * hash) + ODOMETER_FIELD_NUMBER;
    hash = (53 * hash) + getOdometer();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.example.libs.SensNdNavData parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.example.libs.SensNdNavData parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.example.libs.SensNdNavData parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.example.libs.SensNdNavData parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.example.libs.SensNdNavData parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.example.libs.SensNdNavData parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.example.libs.SensNdNavData parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static org.example.libs.SensNdNavData parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static org.example.libs.SensNdNavData parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static org.example.libs.SensNdNavData parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.example.libs.SensNdNavData parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static org.example.libs.SensNdNavData parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.example.libs.SensNdNavData prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Навигационные данные
   * </pre>
   *
   * Protobuf type {@code SensNdNavData}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:SensNdNavData)
      org.example.libs.SensNdNavDataOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.example.libs.StorageRecordOuterClass.internal_static_SensNdNavData_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.example.libs.StorageRecordOuterClass.internal_static_SensNdNavData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.example.libs.SensNdNavData.class, org.example.libs.SensNdNavData.Builder.class);
    }

    // Construct using org.example.libs.SensNdNavData.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      sensNum_ = 0;
      longitude_ = 0;
      latitude_ = 0;
      altitude_ = 0;
      speed_ = 0;
      course_ = 0;
      satCount_ = 0;
      pdop_ = 0;
      track_ = 0;
      odometer_ = 0;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.example.libs.StorageRecordOuterClass.internal_static_SensNdNavData_descriptor;
    }

    @java.lang.Override
    public org.example.libs.SensNdNavData getDefaultInstanceForType() {
      return org.example.libs.SensNdNavData.getDefaultInstance();
    }

    @java.lang.Override
    public org.example.libs.SensNdNavData build() {
      org.example.libs.SensNdNavData result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.example.libs.SensNdNavData buildPartial() {
      org.example.libs.SensNdNavData result = new org.example.libs.SensNdNavData(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(org.example.libs.SensNdNavData result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.sensNum_ = sensNum_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.longitude_ = longitude_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.latitude_ = latitude_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.altitude_ = altitude_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.speed_ = speed_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.course_ = course_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.satCount_ = satCount_;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.pdop_ = pdop_;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.track_ = track_;
      }
      if (((from_bitField0_ & 0x00000200) != 0)) {
        result.odometer_ = odometer_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.example.libs.SensNdNavData) {
        return mergeFrom((org.example.libs.SensNdNavData)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.example.libs.SensNdNavData other) {
      if (other == org.example.libs.SensNdNavData.getDefaultInstance()) return this;
      if (other.getSensNum() != 0) {
        setSensNum(other.getSensNum());
      }
      if (other.getLongitude() != 0) {
        setLongitude(other.getLongitude());
      }
      if (other.getLatitude() != 0) {
        setLatitude(other.getLatitude());
      }
      if (other.getAltitude() != 0) {
        setAltitude(other.getAltitude());
      }
      if (other.getSpeed() != 0) {
        setSpeed(other.getSpeed());
      }
      if (other.getCourse() != 0) {
        setCourse(other.getCourse());
      }
      if (other.getSatCount() != 0) {
        setSatCount(other.getSatCount());
      }
      if (other.getPdop() != 0) {
        setPdop(other.getPdop());
      }
      if (other.getTrack() != 0) {
        setTrack(other.getTrack());
      }
      if (other.getOdometer() != 0) {
        setOdometer(other.getOdometer());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              sensNum_ = input.readUInt32();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 21: {
              longitude_ = input.readSFixed32();
              bitField0_ |= 0x00000002;
              break;
            } // case 21
            case 29: {
              latitude_ = input.readSFixed32();
              bitField0_ |= 0x00000004;
              break;
            } // case 29
            case 32: {
              altitude_ = input.readUInt32();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            case 40: {
              speed_ = input.readUInt32();
              bitField0_ |= 0x00000010;
              break;
            } // case 40
            case 48: {
              course_ = input.readUInt32();
              bitField0_ |= 0x00000020;
              break;
            } // case 48
            case 56: {
              satCount_ = input.readUInt32();
              bitField0_ |= 0x00000040;
              break;
            } // case 56
            case 64: {
              pdop_ = input.readUInt32();
              bitField0_ |= 0x00000080;
              break;
            } // case 64
            case 72: {
              track_ = input.readUInt32();
              bitField0_ |= 0x00000100;
              break;
            } // case 72
            case 80: {
              odometer_ = input.readUInt32();
              bitField0_ |= 0x00000200;
              break;
            } // case 80
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int sensNum_ ;
    /**
     * <pre>
     * Номер датчика
     * </pre>
     *
     * <code>uint32 sens_num = 1;</code>
     * @return The sensNum.
     */
    @java.lang.Override
    public int getSensNum() {
      return sensNum_;
    }
    /**
     * <pre>
     * Номер датчика
     * </pre>
     *
     * <code>uint32 sens_num = 1;</code>
     * @param value The sensNum to set.
     * @return This builder for chaining.
     */
    public Builder setSensNum(int value) {

      sensNum_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Номер датчика
     * </pre>
     *
     * <code>uint32 sens_num = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearSensNum() {
      bitField0_ = (bitField0_ & ~0x00000001);
      sensNum_ = 0;
      onChanged();
      return this;
    }

    private int longitude_ ;
    /**
     * <pre>
     * Долгота (в формате МНД ЭРА ГЛОНАСС)
     * </pre>
     *
     * <code>sfixed32 longitude = 2;</code>
     * @return The longitude.
     */
    @java.lang.Override
    public int getLongitude() {
      return longitude_;
    }
    /**
     * <pre>
     * Долгота (в формате МНД ЭРА ГЛОНАСС)
     * </pre>
     *
     * <code>sfixed32 longitude = 2;</code>
     * @param value The longitude to set.
     * @return This builder for chaining.
     */
    public Builder setLongitude(int value) {

      longitude_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Долгота (в формате МНД ЭРА ГЛОНАСС)
     * </pre>
     *
     * <code>sfixed32 longitude = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearLongitude() {
      bitField0_ = (bitField0_ & ~0x00000002);
      longitude_ = 0;
      onChanged();
      return this;
    }

    private int latitude_ ;
    /**
     * <pre>
     * Широта (в формате МНД ЭРА ГЛОНАСС)
     * </pre>
     *
     * <code>sfixed32 latitude = 3;</code>
     * @return The latitude.
     */
    @java.lang.Override
    public int getLatitude() {
      return latitude_;
    }
    /**
     * <pre>
     * Широта (в формате МНД ЭРА ГЛОНАСС)
     * </pre>
     *
     * <code>sfixed32 latitude = 3;</code>
     * @param value The latitude to set.
     * @return This builder for chaining.
     */
    public Builder setLatitude(int value) {

      latitude_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Широта (в формате МНД ЭРА ГЛОНАСС)
     * </pre>
     *
     * <code>sfixed32 latitude = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearLatitude() {
      bitField0_ = (bitField0_ & ~0x00000004);
      latitude_ = 0;
      onChanged();
      return this;
    }

    private int altitude_ ;
    /**
     * <pre>
     * Высота, м
     * </pre>
     *
     * <code>uint32 altitude = 4;</code>
     * @return The altitude.
     */
    @java.lang.Override
    public int getAltitude() {
      return altitude_;
    }
    /**
     * <pre>
     * Высота, м
     * </pre>
     *
     * <code>uint32 altitude = 4;</code>
     * @param value The altitude to set.
     * @return This builder for chaining.
     */
    public Builder setAltitude(int value) {

      altitude_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Высота, м
     * </pre>
     *
     * <code>uint32 altitude = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearAltitude() {
      bitField0_ = (bitField0_ & ~0x00000008);
      altitude_ = 0;
      onChanged();
      return this;
    }

    private int speed_ ;
    /**
     * <pre>
     * Скорость, км/ч
     * </pre>
     *
     * <code>uint32 speed = 5;</code>
     * @return The speed.
     */
    @java.lang.Override
    public int getSpeed() {
      return speed_;
    }
    /**
     * <pre>
     * Скорость, км/ч
     * </pre>
     *
     * <code>uint32 speed = 5;</code>
     * @param value The speed to set.
     * @return This builder for chaining.
     */
    public Builder setSpeed(int value) {

      speed_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Скорость, км/ч
     * </pre>
     *
     * <code>uint32 speed = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearSpeed() {
      bitField0_ = (bitField0_ & ~0x00000010);
      speed_ = 0;
      onChanged();
      return this;
    }

    private int course_ ;
    /**
     * <pre>
     * Курс (угол)
     * </pre>
     *
     * <code>uint32 course = 6;</code>
     * @return The course.
     */
    @java.lang.Override
    public int getCourse() {
      return course_;
    }
    /**
     * <pre>
     * Курс (угол)
     * </pre>
     *
     * <code>uint32 course = 6;</code>
     * @param value The course to set.
     * @return This builder for chaining.
     */
    public Builder setCourse(int value) {

      course_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Курс (угол)
     * </pre>
     *
     * <code>uint32 course = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearCourse() {
      bitField0_ = (bitField0_ & ~0x00000020);
      course_ = 0;
      onChanged();
      return this;
    }

    private int satCount_ ;
    /**
     * <pre>
     * Количество спутников
     * </pre>
     *
     * <code>uint32 sat_count = 7;</code>
     * @return The satCount.
     */
    @java.lang.Override
    public int getSatCount() {
      return satCount_;
    }
    /**
     * <pre>
     * Количество спутников
     * </pre>
     *
     * <code>uint32 sat_count = 7;</code>
     * @param value The satCount to set.
     * @return This builder for chaining.
     */
    public Builder setSatCount(int value) {

      satCount_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Количество спутников
     * </pre>
     *
     * <code>uint32 sat_count = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearSatCount() {
      bitField0_ = (bitField0_ & ~0x00000040);
      satCount_ = 0;
      onChanged();
      return this;
    }

    private int pdop_ ;
    /**
     * <pre>
     * Погрешность позиционирования
     * </pre>
     *
     * <code>uint32 pdop = 8;</code>
     * @return The pdop.
     */
    @java.lang.Override
    public int getPdop() {
      return pdop_;
    }
    /**
     * <pre>
     * Погрешность позиционирования
     * </pre>
     *
     * <code>uint32 pdop = 8;</code>
     * @param value The pdop to set.
     * @return This builder for chaining.
     */
    public Builder setPdop(int value) {

      pdop_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Погрешность позиционирования
     * </pre>
     *
     * <code>uint32 pdop = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearPdop() {
      bitField0_ = (bitField0_ & ~0x00000080);
      pdop_ = 0;
      onChanged();
      return this;
    }

    private int track_ ;
    /**
     * <pre>
     * Трэк, м
     * </pre>
     *
     * <code>uint32 track = 9;</code>
     * @return The track.
     */
    @java.lang.Override
    public int getTrack() {
      return track_;
    }
    /**
     * <pre>
     * Трэк, м
     * </pre>
     *
     * <code>uint32 track = 9;</code>
     * @param value The track to set.
     * @return This builder for chaining.
     */
    public Builder setTrack(int value) {

      track_ = value;
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Трэк, м
     * </pre>
     *
     * <code>uint32 track = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearTrack() {
      bitField0_ = (bitField0_ & ~0x00000100);
      track_ = 0;
      onChanged();
      return this;
    }

    private int odometer_ ;
    /**
     * <pre>
     * Одометр, м
     * </pre>
     *
     * <code>uint32 odometer = 10;</code>
     * @return The odometer.
     */
    @java.lang.Override
    public int getOdometer() {
      return odometer_;
    }
    /**
     * <pre>
     * Одометр, м
     * </pre>
     *
     * <code>uint32 odometer = 10;</code>
     * @param value The odometer to set.
     * @return This builder for chaining.
     */
    public Builder setOdometer(int value) {

      odometer_ = value;
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Одометр, м
     * </pre>
     *
     * <code>uint32 odometer = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearOdometer() {
      bitField0_ = (bitField0_ & ~0x00000200);
      odometer_ = 0;
      onChanged();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:SensNdNavData)
  }

  // @@protoc_insertion_point(class_scope:SensNdNavData)
  private static final org.example.libs.SensNdNavData DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.example.libs.SensNdNavData();
  }

  public static org.example.libs.SensNdNavData getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SensNdNavData>
      PARSER = new com.google.protobuf.AbstractParser<SensNdNavData>() {
    @java.lang.Override
    public SensNdNavData parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<SensNdNavData> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SensNdNavData> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.example.libs.SensNdNavData getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

