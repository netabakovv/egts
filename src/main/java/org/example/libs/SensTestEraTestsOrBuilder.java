// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: storage_record.proto
// Protobuf Java Version: 4.30.2

package org.example.libs;

public interface SensTestEraTestsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:SensTestEraTests)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Номер датчика
   * </pre>
   *
   * <code>uint32 sens_num = 1;</code>
   * @return The sensNum.
   */
  int getSensNum();

  /**
   * <pre>
   * Некорректное подключение микрофона
   * </pre>
   *
   * <code>bool mic_con_failure = 2;</code>
   * @return The micConFailure.
   */
  boolean getMicConFailure();

  /**
   * <pre>
   * Неработоспособность микрофона
   * </pre>
   *
   * <code>bool mic_failure = 3;</code>
   * @return The micFailure.
   */
  boolean getMicFailure();

  /**
   * <pre>
   * Неисправность при определении состояния линии зажигания
   * </pre>
   *
   * <code>bool ignition_failure = 4;</code>
   * @return The ignitionFailure.
   */
  boolean getIgnitionFailure();

  /**
   * <pre>
   * Неисправность БИП
   * </pre>
   *
   * <code>bool uim_failure = 5;</code>
   * @return The uimFailure.
   */
  boolean getUimFailure();

  /**
   * <pre>
   * Неисправность резервной батареи
   * </pre>
   *
   * <code>bool bat_failure = 6;</code>
   * @return The batFailure.
   */
  boolean getBatFailure();

  /**
   * <pre>
   * Разряд резервной батарее ниже допустимого уровня
   * </pre>
   *
   * <code>bool bat_volt_low = 7;</code>
   * @return The batVoltLow.
   */
  boolean getBatVoltLow();

  /**
   * <pre>
   * Неисправность датчика автоматической идентификации события ДТП
   * </pre>
   *
   * <code>bool crash_sens_failure = 8;</code>
   * @return The crashSensFailure.
   */
  boolean getCrashSensFailure();

  /**
   * <pre>
   * Отсутствие целостности (достоверности) определяемых приемником ГНСС навигационно-временных параметров (функция RAIM)
   * </pre>
   *
   * <code>bool raim_problem = 9;</code>
   * @return The raimProblem.
   */
  boolean getRaimProblem();

  /**
   * <pre>
   * Неработоспособность приемника ГНСС
   * </pre>
   *
   * <code>bool gnss_antenna_failure = 10;</code>
   * @return The gnssAntennaFailure.
   */
  boolean getGnssAntennaFailure();

  /**
   * <pre>
   * Переполнение внутренней памяти событий
   * </pre>
   *
   * <code>bool events_memory_overflow = 11;</code>
   * @return The eventsMemoryOverflow.
   */
  boolean getEventsMemoryOverflow();
}
