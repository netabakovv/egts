// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: storage_record.proto
// Protobuf Java Version: 4.30.2

package org.example.libs;

public interface SensCanLogDataOrBuilder extends
    // @@protoc_insertion_point(interface_extends:SensCanLogData)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Номер датчика
   * </pre>
   *
   * <code>uint32 sens_num = 1;</code>
   * @return The sensNum.
   */
  int getSensNum();

  /**
   * <pre>
   * Флаги работоспособности и безопасности устройства
   * </pre>
   *
   * <code>uint32 flag_security_state = 2;</code>
   * @return The flagSecurityState.
   */
  int getFlagSecurityState();

  /**
   * <pre>
   * Флаги контроллеров аварии
   * </pre>
   *
   * <code>uint32 flag_alarm = 3;</code>
   * @return The flagAlarm.
   */
  int getFlagAlarm();

  /**
   * <pre>
   * Полное время работы двигателя, ч*100. Пример: 1ч 15мин = 125.
   * </pre>
   *
   * <code>uint32 engine_time_all = 4;</code>
   * @return The engineTimeAll.
   */
  int getEngineTimeAll();

  /**
   * <pre>
   * Обороты двигателя
   * </pre>
   *
   * <code>uint32 engine_turn_speed = 5;</code>
   * @return The engineTurnSpeed.
   */
  int getEngineTurnSpeed();

  /**
   * <pre>
   * Температура двигателя, Ц.
   * </pre>
   *
   * <code>sint32 engine_temperature = 6;</code>
   * @return The engineTemperature.
   */
  int getEngineTemperature();

  /**
   * <pre>
   * Полный расход топлива, л.
   * </pre>
   *
   * <code>uint32 fuel_consumption_all = 7;</code>
   * @return The fuelConsumptionAll.
   */
  int getFuelConsumptionAll();

  /**
   * <pre>
   * bit0..bit14 - Уровень топлива. bit15- Единицы измерения. 1 - %, 0 - л.
   * </pre>
   *
   * <code>uint32 fuel_level = 8;</code>
   * @return The fuelLevel.
   */
  int getFuelLevel();

  /**
   * <pre>
   * Полный пробег транспортного средства, км*100
   * </pre>
   *
   * <code>uint32 track_all = 9;</code>
   * @return The trackAll.
   */
  int getTrackAll();

  /**
   * <pre>
   * Скорость, км/ч.
   * </pre>
   *
   * <code>uint32 speed = 10;</code>
   * @return The speed.
   */
  int getSpeed();

  /**
   * <pre>
   * Давление на ось 1, кг*10
   * </pre>
   *
   * <code>uint32 pressure_axis_1 = 11;</code>
   * @return The pressureAxis1.
   */
  int getPressureAxis1();

  /**
   * <pre>
   * Давление на ось 2
   * </pre>
   *
   * <code>uint32 pressure_axis_2 = 12;</code>
   * @return The pressureAxis2.
   */
  int getPressureAxis2();

  /**
   * <pre>
   * Давление на ось 3
   * </pre>
   *
   * <code>uint32 pressure_axis_3 = 13;</code>
   * @return The pressureAxis3.
   */
  int getPressureAxis3();

  /**
   * <pre>
   * Давление на ось 4
   * </pre>
   *
   * <code>uint32 pressure_axis_4 = 14;</code>
   * @return The pressureAxis4.
   */
  int getPressureAxis4();

  /**
   * <pre>
   * Давление на ось 5
   * </pre>
   *
   * <code>uint32 pressure_axis_5 = 15;</code>
   * @return The pressureAxis5.
   */
  int getPressureAxis5();
}
