// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: storage_record.proto
// Protobuf Java Version: 4.30.2

package org.example.libs;

/**
 * <pre>
 * Тесты ЭРА ГЛОНАСС
 * </pre>
 *
 * Protobuf type {@code SensTestEraTests}
 */
public final class SensTestEraTests extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:SensTestEraTests)
    SensTestEraTestsOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 30,
      /* patch= */ 2,
      /* suffix= */ "",
      SensTestEraTests.class.getName());
  }
  // Use SensTestEraTests.newBuilder() to construct.
  private SensTestEraTests(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private SensTestEraTests() {
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.example.libs.StorageRecordOuterClass.internal_static_SensTestEraTests_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.example.libs.StorageRecordOuterClass.internal_static_SensTestEraTests_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.example.libs.SensTestEraTests.class, org.example.libs.SensTestEraTests.Builder.class);
  }

  public static final int SENS_NUM_FIELD_NUMBER = 1;
  private int sensNum_ = 0;
  /**
   * <pre>
   * Номер датчика
   * </pre>
   *
   * <code>uint32 sens_num = 1;</code>
   * @return The sensNum.
   */
  @java.lang.Override
  public int getSensNum() {
    return sensNum_;
  }

  public static final int MIC_CON_FAILURE_FIELD_NUMBER = 2;
  private boolean micConFailure_ = false;
  /**
   * <pre>
   * Некорректное подключение микрофона
   * </pre>
   *
   * <code>bool mic_con_failure = 2;</code>
   * @return The micConFailure.
   */
  @java.lang.Override
  public boolean getMicConFailure() {
    return micConFailure_;
  }

  public static final int MIC_FAILURE_FIELD_NUMBER = 3;
  private boolean micFailure_ = false;
  /**
   * <pre>
   * Неработоспособность микрофона
   * </pre>
   *
   * <code>bool mic_failure = 3;</code>
   * @return The micFailure.
   */
  @java.lang.Override
  public boolean getMicFailure() {
    return micFailure_;
  }

  public static final int IGNITION_FAILURE_FIELD_NUMBER = 4;
  private boolean ignitionFailure_ = false;
  /**
   * <pre>
   * Неисправность при определении состояния линии зажигания
   * </pre>
   *
   * <code>bool ignition_failure = 4;</code>
   * @return The ignitionFailure.
   */
  @java.lang.Override
  public boolean getIgnitionFailure() {
    return ignitionFailure_;
  }

  public static final int UIM_FAILURE_FIELD_NUMBER = 5;
  private boolean uimFailure_ = false;
  /**
   * <pre>
   * Неисправность БИП
   * </pre>
   *
   * <code>bool uim_failure = 5;</code>
   * @return The uimFailure.
   */
  @java.lang.Override
  public boolean getUimFailure() {
    return uimFailure_;
  }

  public static final int BAT_FAILURE_FIELD_NUMBER = 6;
  private boolean batFailure_ = false;
  /**
   * <pre>
   * Неисправность резервной батареи
   * </pre>
   *
   * <code>bool bat_failure = 6;</code>
   * @return The batFailure.
   */
  @java.lang.Override
  public boolean getBatFailure() {
    return batFailure_;
  }

  public static final int BAT_VOLT_LOW_FIELD_NUMBER = 7;
  private boolean batVoltLow_ = false;
  /**
   * <pre>
   * Разряд резервной батарее ниже допустимого уровня
   * </pre>
   *
   * <code>bool bat_volt_low = 7;</code>
   * @return The batVoltLow.
   */
  @java.lang.Override
  public boolean getBatVoltLow() {
    return batVoltLow_;
  }

  public static final int CRASH_SENS_FAILURE_FIELD_NUMBER = 8;
  private boolean crashSensFailure_ = false;
  /**
   * <pre>
   * Неисправность датчика автоматической идентификации события ДТП
   * </pre>
   *
   * <code>bool crash_sens_failure = 8;</code>
   * @return The crashSensFailure.
   */
  @java.lang.Override
  public boolean getCrashSensFailure() {
    return crashSensFailure_;
  }

  public static final int RAIM_PROBLEM_FIELD_NUMBER = 9;
  private boolean raimProblem_ = false;
  /**
   * <pre>
   * Отсутствие целостности (достоверности) определяемых приемником ГНСС навигационно-временных параметров (функция RAIM)
   * </pre>
   *
   * <code>bool raim_problem = 9;</code>
   * @return The raimProblem.
   */
  @java.lang.Override
  public boolean getRaimProblem() {
    return raimProblem_;
  }

  public static final int GNSS_ANTENNA_FAILURE_FIELD_NUMBER = 10;
  private boolean gnssAntennaFailure_ = false;
  /**
   * <pre>
   * Неработоспособность приемника ГНСС
   * </pre>
   *
   * <code>bool gnss_antenna_failure = 10;</code>
   * @return The gnssAntennaFailure.
   */
  @java.lang.Override
  public boolean getGnssAntennaFailure() {
    return gnssAntennaFailure_;
  }

  public static final int EVENTS_MEMORY_OVERFLOW_FIELD_NUMBER = 11;
  private boolean eventsMemoryOverflow_ = false;
  /**
   * <pre>
   * Переполнение внутренней памяти событий
   * </pre>
   *
   * <code>bool events_memory_overflow = 11;</code>
   * @return The eventsMemoryOverflow.
   */
  @java.lang.Override
  public boolean getEventsMemoryOverflow() {
    return eventsMemoryOverflow_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (sensNum_ != 0) {
      output.writeUInt32(1, sensNum_);
    }
    if (micConFailure_ != false) {
      output.writeBool(2, micConFailure_);
    }
    if (micFailure_ != false) {
      output.writeBool(3, micFailure_);
    }
    if (ignitionFailure_ != false) {
      output.writeBool(4, ignitionFailure_);
    }
    if (uimFailure_ != false) {
      output.writeBool(5, uimFailure_);
    }
    if (batFailure_ != false) {
      output.writeBool(6, batFailure_);
    }
    if (batVoltLow_ != false) {
      output.writeBool(7, batVoltLow_);
    }
    if (crashSensFailure_ != false) {
      output.writeBool(8, crashSensFailure_);
    }
    if (raimProblem_ != false) {
      output.writeBool(9, raimProblem_);
    }
    if (gnssAntennaFailure_ != false) {
      output.writeBool(10, gnssAntennaFailure_);
    }
    if (eventsMemoryOverflow_ != false) {
      output.writeBool(11, eventsMemoryOverflow_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (sensNum_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(1, sensNum_);
    }
    if (micConFailure_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(2, micConFailure_);
    }
    if (micFailure_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(3, micFailure_);
    }
    if (ignitionFailure_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(4, ignitionFailure_);
    }
    if (uimFailure_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(5, uimFailure_);
    }
    if (batFailure_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(6, batFailure_);
    }
    if (batVoltLow_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(7, batVoltLow_);
    }
    if (crashSensFailure_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(8, crashSensFailure_);
    }
    if (raimProblem_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(9, raimProblem_);
    }
    if (gnssAntennaFailure_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(10, gnssAntennaFailure_);
    }
    if (eventsMemoryOverflow_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(11, eventsMemoryOverflow_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.example.libs.SensTestEraTests)) {
      return super.equals(obj);
    }
    org.example.libs.SensTestEraTests other = (org.example.libs.SensTestEraTests) obj;

    if (getSensNum()
        != other.getSensNum()) return false;
    if (getMicConFailure()
        != other.getMicConFailure()) return false;
    if (getMicFailure()
        != other.getMicFailure()) return false;
    if (getIgnitionFailure()
        != other.getIgnitionFailure()) return false;
    if (getUimFailure()
        != other.getUimFailure()) return false;
    if (getBatFailure()
        != other.getBatFailure()) return false;
    if (getBatVoltLow()
        != other.getBatVoltLow()) return false;
    if (getCrashSensFailure()
        != other.getCrashSensFailure()) return false;
    if (getRaimProblem()
        != other.getRaimProblem()) return false;
    if (getGnssAntennaFailure()
        != other.getGnssAntennaFailure()) return false;
    if (getEventsMemoryOverflow()
        != other.getEventsMemoryOverflow()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + SENS_NUM_FIELD_NUMBER;
    hash = (53 * hash) + getSensNum();
    hash = (37 * hash) + MIC_CON_FAILURE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getMicConFailure());
    hash = (37 * hash) + MIC_FAILURE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getMicFailure());
    hash = (37 * hash) + IGNITION_FAILURE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getIgnitionFailure());
    hash = (37 * hash) + UIM_FAILURE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getUimFailure());
    hash = (37 * hash) + BAT_FAILURE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getBatFailure());
    hash = (37 * hash) + BAT_VOLT_LOW_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getBatVoltLow());
    hash = (37 * hash) + CRASH_SENS_FAILURE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getCrashSensFailure());
    hash = (37 * hash) + RAIM_PROBLEM_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getRaimProblem());
    hash = (37 * hash) + GNSS_ANTENNA_FAILURE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getGnssAntennaFailure());
    hash = (37 * hash) + EVENTS_MEMORY_OVERFLOW_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getEventsMemoryOverflow());
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.example.libs.SensTestEraTests parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.example.libs.SensTestEraTests parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.example.libs.SensTestEraTests parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.example.libs.SensTestEraTests parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.example.libs.SensTestEraTests parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.example.libs.SensTestEraTests parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.example.libs.SensTestEraTests parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static org.example.libs.SensTestEraTests parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static org.example.libs.SensTestEraTests parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static org.example.libs.SensTestEraTests parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.example.libs.SensTestEraTests parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static org.example.libs.SensTestEraTests parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.example.libs.SensTestEraTests prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Тесты ЭРА ГЛОНАСС
   * </pre>
   *
   * Protobuf type {@code SensTestEraTests}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:SensTestEraTests)
      org.example.libs.SensTestEraTestsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.example.libs.StorageRecordOuterClass.internal_static_SensTestEraTests_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.example.libs.StorageRecordOuterClass.internal_static_SensTestEraTests_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.example.libs.SensTestEraTests.class, org.example.libs.SensTestEraTests.Builder.class);
    }

    // Construct using org.example.libs.SensTestEraTests.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      sensNum_ = 0;
      micConFailure_ = false;
      micFailure_ = false;
      ignitionFailure_ = false;
      uimFailure_ = false;
      batFailure_ = false;
      batVoltLow_ = false;
      crashSensFailure_ = false;
      raimProblem_ = false;
      gnssAntennaFailure_ = false;
      eventsMemoryOverflow_ = false;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.example.libs.StorageRecordOuterClass.internal_static_SensTestEraTests_descriptor;
    }

    @java.lang.Override
    public org.example.libs.SensTestEraTests getDefaultInstanceForType() {
      return org.example.libs.SensTestEraTests.getDefaultInstance();
    }

    @java.lang.Override
    public org.example.libs.SensTestEraTests build() {
      org.example.libs.SensTestEraTests result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.example.libs.SensTestEraTests buildPartial() {
      org.example.libs.SensTestEraTests result = new org.example.libs.SensTestEraTests(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(org.example.libs.SensTestEraTests result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.sensNum_ = sensNum_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.micConFailure_ = micConFailure_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.micFailure_ = micFailure_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.ignitionFailure_ = ignitionFailure_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.uimFailure_ = uimFailure_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.batFailure_ = batFailure_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.batVoltLow_ = batVoltLow_;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.crashSensFailure_ = crashSensFailure_;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.raimProblem_ = raimProblem_;
      }
      if (((from_bitField0_ & 0x00000200) != 0)) {
        result.gnssAntennaFailure_ = gnssAntennaFailure_;
      }
      if (((from_bitField0_ & 0x00000400) != 0)) {
        result.eventsMemoryOverflow_ = eventsMemoryOverflow_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.example.libs.SensTestEraTests) {
        return mergeFrom((org.example.libs.SensTestEraTests)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.example.libs.SensTestEraTests other) {
      if (other == org.example.libs.SensTestEraTests.getDefaultInstance()) return this;
      if (other.getSensNum() != 0) {
        setSensNum(other.getSensNum());
      }
      if (other.getMicConFailure() != false) {
        setMicConFailure(other.getMicConFailure());
      }
      if (other.getMicFailure() != false) {
        setMicFailure(other.getMicFailure());
      }
      if (other.getIgnitionFailure() != false) {
        setIgnitionFailure(other.getIgnitionFailure());
      }
      if (other.getUimFailure() != false) {
        setUimFailure(other.getUimFailure());
      }
      if (other.getBatFailure() != false) {
        setBatFailure(other.getBatFailure());
      }
      if (other.getBatVoltLow() != false) {
        setBatVoltLow(other.getBatVoltLow());
      }
      if (other.getCrashSensFailure() != false) {
        setCrashSensFailure(other.getCrashSensFailure());
      }
      if (other.getRaimProblem() != false) {
        setRaimProblem(other.getRaimProblem());
      }
      if (other.getGnssAntennaFailure() != false) {
        setGnssAntennaFailure(other.getGnssAntennaFailure());
      }
      if (other.getEventsMemoryOverflow() != false) {
        setEventsMemoryOverflow(other.getEventsMemoryOverflow());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              sensNum_ = input.readUInt32();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 16: {
              micConFailure_ = input.readBool();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 24: {
              micFailure_ = input.readBool();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            case 32: {
              ignitionFailure_ = input.readBool();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            case 40: {
              uimFailure_ = input.readBool();
              bitField0_ |= 0x00000010;
              break;
            } // case 40
            case 48: {
              batFailure_ = input.readBool();
              bitField0_ |= 0x00000020;
              break;
            } // case 48
            case 56: {
              batVoltLow_ = input.readBool();
              bitField0_ |= 0x00000040;
              break;
            } // case 56
            case 64: {
              crashSensFailure_ = input.readBool();
              bitField0_ |= 0x00000080;
              break;
            } // case 64
            case 72: {
              raimProblem_ = input.readBool();
              bitField0_ |= 0x00000100;
              break;
            } // case 72
            case 80: {
              gnssAntennaFailure_ = input.readBool();
              bitField0_ |= 0x00000200;
              break;
            } // case 80
            case 88: {
              eventsMemoryOverflow_ = input.readBool();
              bitField0_ |= 0x00000400;
              break;
            } // case 88
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int sensNum_ ;
    /**
     * <pre>
     * Номер датчика
     * </pre>
     *
     * <code>uint32 sens_num = 1;</code>
     * @return The sensNum.
     */
    @java.lang.Override
    public int getSensNum() {
      return sensNum_;
    }
    /**
     * <pre>
     * Номер датчика
     * </pre>
     *
     * <code>uint32 sens_num = 1;</code>
     * @param value The sensNum to set.
     * @return This builder for chaining.
     */
    public Builder setSensNum(int value) {

      sensNum_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Номер датчика
     * </pre>
     *
     * <code>uint32 sens_num = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearSensNum() {
      bitField0_ = (bitField0_ & ~0x00000001);
      sensNum_ = 0;
      onChanged();
      return this;
    }

    private boolean micConFailure_ ;
    /**
     * <pre>
     * Некорректное подключение микрофона
     * </pre>
     *
     * <code>bool mic_con_failure = 2;</code>
     * @return The micConFailure.
     */
    @java.lang.Override
    public boolean getMicConFailure() {
      return micConFailure_;
    }
    /**
     * <pre>
     * Некорректное подключение микрофона
     * </pre>
     *
     * <code>bool mic_con_failure = 2;</code>
     * @param value The micConFailure to set.
     * @return This builder for chaining.
     */
    public Builder setMicConFailure(boolean value) {

      micConFailure_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Некорректное подключение микрофона
     * </pre>
     *
     * <code>bool mic_con_failure = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearMicConFailure() {
      bitField0_ = (bitField0_ & ~0x00000002);
      micConFailure_ = false;
      onChanged();
      return this;
    }

    private boolean micFailure_ ;
    /**
     * <pre>
     * Неработоспособность микрофона
     * </pre>
     *
     * <code>bool mic_failure = 3;</code>
     * @return The micFailure.
     */
    @java.lang.Override
    public boolean getMicFailure() {
      return micFailure_;
    }
    /**
     * <pre>
     * Неработоспособность микрофона
     * </pre>
     *
     * <code>bool mic_failure = 3;</code>
     * @param value The micFailure to set.
     * @return This builder for chaining.
     */
    public Builder setMicFailure(boolean value) {

      micFailure_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Неработоспособность микрофона
     * </pre>
     *
     * <code>bool mic_failure = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearMicFailure() {
      bitField0_ = (bitField0_ & ~0x00000004);
      micFailure_ = false;
      onChanged();
      return this;
    }

    private boolean ignitionFailure_ ;
    /**
     * <pre>
     * Неисправность при определении состояния линии зажигания
     * </pre>
     *
     * <code>bool ignition_failure = 4;</code>
     * @return The ignitionFailure.
     */
    @java.lang.Override
    public boolean getIgnitionFailure() {
      return ignitionFailure_;
    }
    /**
     * <pre>
     * Неисправность при определении состояния линии зажигания
     * </pre>
     *
     * <code>bool ignition_failure = 4;</code>
     * @param value The ignitionFailure to set.
     * @return This builder for chaining.
     */
    public Builder setIgnitionFailure(boolean value) {

      ignitionFailure_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Неисправность при определении состояния линии зажигания
     * </pre>
     *
     * <code>bool ignition_failure = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearIgnitionFailure() {
      bitField0_ = (bitField0_ & ~0x00000008);
      ignitionFailure_ = false;
      onChanged();
      return this;
    }

    private boolean uimFailure_ ;
    /**
     * <pre>
     * Неисправность БИП
     * </pre>
     *
     * <code>bool uim_failure = 5;</code>
     * @return The uimFailure.
     */
    @java.lang.Override
    public boolean getUimFailure() {
      return uimFailure_;
    }
    /**
     * <pre>
     * Неисправность БИП
     * </pre>
     *
     * <code>bool uim_failure = 5;</code>
     * @param value The uimFailure to set.
     * @return This builder for chaining.
     */
    public Builder setUimFailure(boolean value) {

      uimFailure_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Неисправность БИП
     * </pre>
     *
     * <code>bool uim_failure = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearUimFailure() {
      bitField0_ = (bitField0_ & ~0x00000010);
      uimFailure_ = false;
      onChanged();
      return this;
    }

    private boolean batFailure_ ;
    /**
     * <pre>
     * Неисправность резервной батареи
     * </pre>
     *
     * <code>bool bat_failure = 6;</code>
     * @return The batFailure.
     */
    @java.lang.Override
    public boolean getBatFailure() {
      return batFailure_;
    }
    /**
     * <pre>
     * Неисправность резервной батареи
     * </pre>
     *
     * <code>bool bat_failure = 6;</code>
     * @param value The batFailure to set.
     * @return This builder for chaining.
     */
    public Builder setBatFailure(boolean value) {

      batFailure_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Неисправность резервной батареи
     * </pre>
     *
     * <code>bool bat_failure = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearBatFailure() {
      bitField0_ = (bitField0_ & ~0x00000020);
      batFailure_ = false;
      onChanged();
      return this;
    }

    private boolean batVoltLow_ ;
    /**
     * <pre>
     * Разряд резервной батарее ниже допустимого уровня
     * </pre>
     *
     * <code>bool bat_volt_low = 7;</code>
     * @return The batVoltLow.
     */
    @java.lang.Override
    public boolean getBatVoltLow() {
      return batVoltLow_;
    }
    /**
     * <pre>
     * Разряд резервной батарее ниже допустимого уровня
     * </pre>
     *
     * <code>bool bat_volt_low = 7;</code>
     * @param value The batVoltLow to set.
     * @return This builder for chaining.
     */
    public Builder setBatVoltLow(boolean value) {

      batVoltLow_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Разряд резервной батарее ниже допустимого уровня
     * </pre>
     *
     * <code>bool bat_volt_low = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearBatVoltLow() {
      bitField0_ = (bitField0_ & ~0x00000040);
      batVoltLow_ = false;
      onChanged();
      return this;
    }

    private boolean crashSensFailure_ ;
    /**
     * <pre>
     * Неисправность датчика автоматической идентификации события ДТП
     * </pre>
     *
     * <code>bool crash_sens_failure = 8;</code>
     * @return The crashSensFailure.
     */
    @java.lang.Override
    public boolean getCrashSensFailure() {
      return crashSensFailure_;
    }
    /**
     * <pre>
     * Неисправность датчика автоматической идентификации события ДТП
     * </pre>
     *
     * <code>bool crash_sens_failure = 8;</code>
     * @param value The crashSensFailure to set.
     * @return This builder for chaining.
     */
    public Builder setCrashSensFailure(boolean value) {

      crashSensFailure_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Неисправность датчика автоматической идентификации события ДТП
     * </pre>
     *
     * <code>bool crash_sens_failure = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearCrashSensFailure() {
      bitField0_ = (bitField0_ & ~0x00000080);
      crashSensFailure_ = false;
      onChanged();
      return this;
    }

    private boolean raimProblem_ ;
    /**
     * <pre>
     * Отсутствие целостности (достоверности) определяемых приемником ГНСС навигационно-временных параметров (функция RAIM)
     * </pre>
     *
     * <code>bool raim_problem = 9;</code>
     * @return The raimProblem.
     */
    @java.lang.Override
    public boolean getRaimProblem() {
      return raimProblem_;
    }
    /**
     * <pre>
     * Отсутствие целостности (достоверности) определяемых приемником ГНСС навигационно-временных параметров (функция RAIM)
     * </pre>
     *
     * <code>bool raim_problem = 9;</code>
     * @param value The raimProblem to set.
     * @return This builder for chaining.
     */
    public Builder setRaimProblem(boolean value) {

      raimProblem_ = value;
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Отсутствие целостности (достоверности) определяемых приемником ГНСС навигационно-временных параметров (функция RAIM)
     * </pre>
     *
     * <code>bool raim_problem = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearRaimProblem() {
      bitField0_ = (bitField0_ & ~0x00000100);
      raimProblem_ = false;
      onChanged();
      return this;
    }

    private boolean gnssAntennaFailure_ ;
    /**
     * <pre>
     * Неработоспособность приемника ГНСС
     * </pre>
     *
     * <code>bool gnss_antenna_failure = 10;</code>
     * @return The gnssAntennaFailure.
     */
    @java.lang.Override
    public boolean getGnssAntennaFailure() {
      return gnssAntennaFailure_;
    }
    /**
     * <pre>
     * Неработоспособность приемника ГНСС
     * </pre>
     *
     * <code>bool gnss_antenna_failure = 10;</code>
     * @param value The gnssAntennaFailure to set.
     * @return This builder for chaining.
     */
    public Builder setGnssAntennaFailure(boolean value) {

      gnssAntennaFailure_ = value;
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Неработоспособность приемника ГНСС
     * </pre>
     *
     * <code>bool gnss_antenna_failure = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearGnssAntennaFailure() {
      bitField0_ = (bitField0_ & ~0x00000200);
      gnssAntennaFailure_ = false;
      onChanged();
      return this;
    }

    private boolean eventsMemoryOverflow_ ;
    /**
     * <pre>
     * Переполнение внутренней памяти событий
     * </pre>
     *
     * <code>bool events_memory_overflow = 11;</code>
     * @return The eventsMemoryOverflow.
     */
    @java.lang.Override
    public boolean getEventsMemoryOverflow() {
      return eventsMemoryOverflow_;
    }
    /**
     * <pre>
     * Переполнение внутренней памяти событий
     * </pre>
     *
     * <code>bool events_memory_overflow = 11;</code>
     * @param value The eventsMemoryOverflow to set.
     * @return This builder for chaining.
     */
    public Builder setEventsMemoryOverflow(boolean value) {

      eventsMemoryOverflow_ = value;
      bitField0_ |= 0x00000400;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Переполнение внутренней памяти событий
     * </pre>
     *
     * <code>bool events_memory_overflow = 11;</code>
     * @return This builder for chaining.
     */
    public Builder clearEventsMemoryOverflow() {
      bitField0_ = (bitField0_ & ~0x00000400);
      eventsMemoryOverflow_ = false;
      onChanged();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:SensTestEraTests)
  }

  // @@protoc_insertion_point(class_scope:SensTestEraTests)
  private static final org.example.libs.SensTestEraTests DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.example.libs.SensTestEraTests();
  }

  public static org.example.libs.SensTestEraTests getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SensTestEraTests>
      PARSER = new com.google.protobuf.AbstractParser<SensTestEraTests>() {
    @java.lang.Override
    public SensTestEraTests parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<SensTestEraTests> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SensTestEraTests> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.example.libs.SensTestEraTests getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

