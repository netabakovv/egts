// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: storage_record.proto
// Protobuf Java Version: 4.30.2

package org.example.libs;

/**
 * <pre>
 * Данные акселерометра
 * </pre>
 *
 * Protobuf type {@code SensAccelerometerData}
 */
public final class SensAccelerometerData extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:SensAccelerometerData)
    SensAccelerometerDataOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 30,
      /* patch= */ 2,
      /* suffix= */ "",
      SensAccelerometerData.class.getName());
  }
  // Use SensAccelerometerData.newBuilder() to construct.
  private SensAccelerometerData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private SensAccelerometerData() {
    buf_ = com.google.protobuf.ByteString.EMPTY;
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.example.libs.StorageRecordOuterClass.internal_static_SensAccelerometerData_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.example.libs.StorageRecordOuterClass.internal_static_SensAccelerometerData_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.example.libs.SensAccelerometerData.class, org.example.libs.SensAccelerometerData.Builder.class);
  }

  public static final int SENS_NUM_FIELD_NUMBER = 1;
  private int sensNum_ = 0;
  /**
   * <pre>
   * Номер датчика
   * </pre>
   *
   * <code>uint32 sens_num = 1;</code>
   * @return The sensNum.
   */
  @java.lang.Override
  public int getSensNum() {
    return sensNum_;
  }

  public static final int BUF_FIELD_NUMBER = 2;
  private com.google.protobuf.ByteString buf_ = com.google.protobuf.ByteString.EMPTY;
  /**
   * <pre>
   * Буфер с данными
   * </pre>
   *
   * <code>bytes buf = 2;</code>
   * @return The buf.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getBuf() {
    return buf_;
  }

  public static final int ATM_FIELD_NUMBER = 3;
  private int atm_ = 0;
  /**
   * <pre>
   * UTC время формирования первой отметки в буфере
   * </pre>
   *
   * <code>uint32 atm = 3;</code>
   * @return The atm.
   */
  @java.lang.Override
  public int getAtm() {
    return atm_;
  }

  public static final int FREQUENCY_FIELD_NUMBER = 4;
  private int frequency_ = 0;
  /**
   * <pre>
   * Частота следования отметок в ГЦ деленная на 10
   * </pre>
   *
   * <code>uint32 frequency = 4;</code>
   * @return The frequency.
   */
  @java.lang.Override
  public int getFrequency() {
    return frequency_;
  }

  public static final int RANGE_FIELD_NUMBER = 5;
  private int range_ = 0;
  /**
   * <pre>
   * Диапазон измерений акселерометра умноженный на 10
   * </pre>
   *
   * <code>uint32 range = 5;</code>
   * @return The range.
   */
  @java.lang.Override
  public int getRange() {
    return range_;
  }

  public static final int FORMAT_FIELD_NUMBER = 6;
  private int format_ = 0;
  /**
   * <pre>
   * Тип кодирования отметок (0 - 8-ми битовые значения со знаком,
   * </pre>
   *
   * <code>uint32 format = 6;</code>
   * @return The format.
   */
  @java.lang.Override
  public int getFormat() {
    return format_;
  }

  public static final int ZLIB_FIELD_NUMBER = 7;
  private int zlib_ = 0;
  /**
   * <pre>
   * 1 - 16-ти битовые значения со знаком, 2 - 32-х битовые значения со знаком, 3 - в формате ASN1 PER )
   * </pre>
   *
   * <code>uint32 zlib = 7;</code>
   * @return The zlib.
   */
  @java.lang.Override
  public int getZlib() {
    return zlib_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (sensNum_ != 0) {
      output.writeUInt32(1, sensNum_);
    }
    if (!buf_.isEmpty()) {
      output.writeBytes(2, buf_);
    }
    if (atm_ != 0) {
      output.writeUInt32(3, atm_);
    }
    if (frequency_ != 0) {
      output.writeUInt32(4, frequency_);
    }
    if (range_ != 0) {
      output.writeUInt32(5, range_);
    }
    if (format_ != 0) {
      output.writeUInt32(6, format_);
    }
    if (zlib_ != 0) {
      output.writeUInt32(7, zlib_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (sensNum_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(1, sensNum_);
    }
    if (!buf_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(2, buf_);
    }
    if (atm_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(3, atm_);
    }
    if (frequency_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(4, frequency_);
    }
    if (range_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(5, range_);
    }
    if (format_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(6, format_);
    }
    if (zlib_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(7, zlib_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.example.libs.SensAccelerometerData)) {
      return super.equals(obj);
    }
    org.example.libs.SensAccelerometerData other = (org.example.libs.SensAccelerometerData) obj;

    if (getSensNum()
        != other.getSensNum()) return false;
    if (!getBuf()
        .equals(other.getBuf())) return false;
    if (getAtm()
        != other.getAtm()) return false;
    if (getFrequency()
        != other.getFrequency()) return false;
    if (getRange()
        != other.getRange()) return false;
    if (getFormat()
        != other.getFormat()) return false;
    if (getZlib()
        != other.getZlib()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + SENS_NUM_FIELD_NUMBER;
    hash = (53 * hash) + getSensNum();
    hash = (37 * hash) + BUF_FIELD_NUMBER;
    hash = (53 * hash) + getBuf().hashCode();
    hash = (37 * hash) + ATM_FIELD_NUMBER;
    hash = (53 * hash) + getAtm();
    hash = (37 * hash) + FREQUENCY_FIELD_NUMBER;
    hash = (53 * hash) + getFrequency();
    hash = (37 * hash) + RANGE_FIELD_NUMBER;
    hash = (53 * hash) + getRange();
    hash = (37 * hash) + FORMAT_FIELD_NUMBER;
    hash = (53 * hash) + getFormat();
    hash = (37 * hash) + ZLIB_FIELD_NUMBER;
    hash = (53 * hash) + getZlib();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.example.libs.SensAccelerometerData parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.example.libs.SensAccelerometerData parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.example.libs.SensAccelerometerData parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.example.libs.SensAccelerometerData parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.example.libs.SensAccelerometerData parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.example.libs.SensAccelerometerData parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.example.libs.SensAccelerometerData parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static org.example.libs.SensAccelerometerData parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static org.example.libs.SensAccelerometerData parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static org.example.libs.SensAccelerometerData parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.example.libs.SensAccelerometerData parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static org.example.libs.SensAccelerometerData parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.example.libs.SensAccelerometerData prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Данные акселерометра
   * </pre>
   *
   * Protobuf type {@code SensAccelerometerData}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:SensAccelerometerData)
      org.example.libs.SensAccelerometerDataOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.example.libs.StorageRecordOuterClass.internal_static_SensAccelerometerData_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.example.libs.StorageRecordOuterClass.internal_static_SensAccelerometerData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.example.libs.SensAccelerometerData.class, org.example.libs.SensAccelerometerData.Builder.class);
    }

    // Construct using org.example.libs.SensAccelerometerData.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      sensNum_ = 0;
      buf_ = com.google.protobuf.ByteString.EMPTY;
      atm_ = 0;
      frequency_ = 0;
      range_ = 0;
      format_ = 0;
      zlib_ = 0;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.example.libs.StorageRecordOuterClass.internal_static_SensAccelerometerData_descriptor;
    }

    @java.lang.Override
    public org.example.libs.SensAccelerometerData getDefaultInstanceForType() {
      return org.example.libs.SensAccelerometerData.getDefaultInstance();
    }

    @java.lang.Override
    public org.example.libs.SensAccelerometerData build() {
      org.example.libs.SensAccelerometerData result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.example.libs.SensAccelerometerData buildPartial() {
      org.example.libs.SensAccelerometerData result = new org.example.libs.SensAccelerometerData(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(org.example.libs.SensAccelerometerData result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.sensNum_ = sensNum_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.buf_ = buf_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.atm_ = atm_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.frequency_ = frequency_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.range_ = range_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.format_ = format_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.zlib_ = zlib_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.example.libs.SensAccelerometerData) {
        return mergeFrom((org.example.libs.SensAccelerometerData)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.example.libs.SensAccelerometerData other) {
      if (other == org.example.libs.SensAccelerometerData.getDefaultInstance()) return this;
      if (other.getSensNum() != 0) {
        setSensNum(other.getSensNum());
      }
      if (!other.getBuf().isEmpty()) {
        setBuf(other.getBuf());
      }
      if (other.getAtm() != 0) {
        setAtm(other.getAtm());
      }
      if (other.getFrequency() != 0) {
        setFrequency(other.getFrequency());
      }
      if (other.getRange() != 0) {
        setRange(other.getRange());
      }
      if (other.getFormat() != 0) {
        setFormat(other.getFormat());
      }
      if (other.getZlib() != 0) {
        setZlib(other.getZlib());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              sensNum_ = input.readUInt32();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 18: {
              buf_ = input.readBytes();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 24: {
              atm_ = input.readUInt32();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            case 32: {
              frequency_ = input.readUInt32();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            case 40: {
              range_ = input.readUInt32();
              bitField0_ |= 0x00000010;
              break;
            } // case 40
            case 48: {
              format_ = input.readUInt32();
              bitField0_ |= 0x00000020;
              break;
            } // case 48
            case 56: {
              zlib_ = input.readUInt32();
              bitField0_ |= 0x00000040;
              break;
            } // case 56
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int sensNum_ ;
    /**
     * <pre>
     * Номер датчика
     * </pre>
     *
     * <code>uint32 sens_num = 1;</code>
     * @return The sensNum.
     */
    @java.lang.Override
    public int getSensNum() {
      return sensNum_;
    }
    /**
     * <pre>
     * Номер датчика
     * </pre>
     *
     * <code>uint32 sens_num = 1;</code>
     * @param value The sensNum to set.
     * @return This builder for chaining.
     */
    public Builder setSensNum(int value) {

      sensNum_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Номер датчика
     * </pre>
     *
     * <code>uint32 sens_num = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearSensNum() {
      bitField0_ = (bitField0_ & ~0x00000001);
      sensNum_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.ByteString buf_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * Буфер с данными
     * </pre>
     *
     * <code>bytes buf = 2;</code>
     * @return The buf.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getBuf() {
      return buf_;
    }
    /**
     * <pre>
     * Буфер с данными
     * </pre>
     *
     * <code>bytes buf = 2;</code>
     * @param value The buf to set.
     * @return This builder for chaining.
     */
    public Builder setBuf(com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      buf_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Буфер с данными
     * </pre>
     *
     * <code>bytes buf = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearBuf() {
      bitField0_ = (bitField0_ & ~0x00000002);
      buf_ = getDefaultInstance().getBuf();
      onChanged();
      return this;
    }

    private int atm_ ;
    /**
     * <pre>
     * UTC время формирования первой отметки в буфере
     * </pre>
     *
     * <code>uint32 atm = 3;</code>
     * @return The atm.
     */
    @java.lang.Override
    public int getAtm() {
      return atm_;
    }
    /**
     * <pre>
     * UTC время формирования первой отметки в буфере
     * </pre>
     *
     * <code>uint32 atm = 3;</code>
     * @param value The atm to set.
     * @return This builder for chaining.
     */
    public Builder setAtm(int value) {

      atm_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * UTC время формирования первой отметки в буфере
     * </pre>
     *
     * <code>uint32 atm = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearAtm() {
      bitField0_ = (bitField0_ & ~0x00000004);
      atm_ = 0;
      onChanged();
      return this;
    }

    private int frequency_ ;
    /**
     * <pre>
     * Частота следования отметок в ГЦ деленная на 10
     * </pre>
     *
     * <code>uint32 frequency = 4;</code>
     * @return The frequency.
     */
    @java.lang.Override
    public int getFrequency() {
      return frequency_;
    }
    /**
     * <pre>
     * Частота следования отметок в ГЦ деленная на 10
     * </pre>
     *
     * <code>uint32 frequency = 4;</code>
     * @param value The frequency to set.
     * @return This builder for chaining.
     */
    public Builder setFrequency(int value) {

      frequency_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Частота следования отметок в ГЦ деленная на 10
     * </pre>
     *
     * <code>uint32 frequency = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearFrequency() {
      bitField0_ = (bitField0_ & ~0x00000008);
      frequency_ = 0;
      onChanged();
      return this;
    }

    private int range_ ;
    /**
     * <pre>
     * Диапазон измерений акселерометра умноженный на 10
     * </pre>
     *
     * <code>uint32 range = 5;</code>
     * @return The range.
     */
    @java.lang.Override
    public int getRange() {
      return range_;
    }
    /**
     * <pre>
     * Диапазон измерений акселерометра умноженный на 10
     * </pre>
     *
     * <code>uint32 range = 5;</code>
     * @param value The range to set.
     * @return This builder for chaining.
     */
    public Builder setRange(int value) {

      range_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Диапазон измерений акселерометра умноженный на 10
     * </pre>
     *
     * <code>uint32 range = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearRange() {
      bitField0_ = (bitField0_ & ~0x00000010);
      range_ = 0;
      onChanged();
      return this;
    }

    private int format_ ;
    /**
     * <pre>
     * Тип кодирования отметок (0 - 8-ми битовые значения со знаком,
     * </pre>
     *
     * <code>uint32 format = 6;</code>
     * @return The format.
     */
    @java.lang.Override
    public int getFormat() {
      return format_;
    }
    /**
     * <pre>
     * Тип кодирования отметок (0 - 8-ми битовые значения со знаком,
     * </pre>
     *
     * <code>uint32 format = 6;</code>
     * @param value The format to set.
     * @return This builder for chaining.
     */
    public Builder setFormat(int value) {

      format_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Тип кодирования отметок (0 - 8-ми битовые значения со знаком,
     * </pre>
     *
     * <code>uint32 format = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearFormat() {
      bitField0_ = (bitField0_ & ~0x00000020);
      format_ = 0;
      onChanged();
      return this;
    }

    private int zlib_ ;
    /**
     * <pre>
     * 1 - 16-ти битовые значения со знаком, 2 - 32-х битовые значения со знаком, 3 - в формате ASN1 PER )
     * </pre>
     *
     * <code>uint32 zlib = 7;</code>
     * @return The zlib.
     */
    @java.lang.Override
    public int getZlib() {
      return zlib_;
    }
    /**
     * <pre>
     * 1 - 16-ти битовые значения со знаком, 2 - 32-х битовые значения со знаком, 3 - в формате ASN1 PER )
     * </pre>
     *
     * <code>uint32 zlib = 7;</code>
     * @param value The zlib to set.
     * @return This builder for chaining.
     */
    public Builder setZlib(int value) {

      zlib_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 1 - 16-ти битовые значения со знаком, 2 - 32-х битовые значения со знаком, 3 - в формате ASN1 PER )
     * </pre>
     *
     * <code>uint32 zlib = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearZlib() {
      bitField0_ = (bitField0_ & ~0x00000040);
      zlib_ = 0;
      onChanged();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:SensAccelerometerData)
  }

  // @@protoc_insertion_point(class_scope:SensAccelerometerData)
  private static final org.example.libs.SensAccelerometerData DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.example.libs.SensAccelerometerData();
  }

  public static org.example.libs.SensAccelerometerData getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SensAccelerometerData>
      PARSER = new com.google.protobuf.AbstractParser<SensAccelerometerData>() {
    @java.lang.Override
    public SensAccelerometerData parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<SensAccelerometerData> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SensAccelerometerData> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.example.libs.SensAccelerometerData getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

